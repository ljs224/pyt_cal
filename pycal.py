# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'pycal.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import numpy as np
from PyQt5 import QtCore, QtGui, QtWidgets 

class Ui_calcul(object):
    
    def setupUi(self, calcul):
        calcul.setObjectName("calcul")
        calcul.resize(640, 480)
        
        self.widget = QtWidgets.QWidget(calcul)
        self.widget.setGeometry(QtCore.QRect(40, 30, 338, 424))
        self.widget.setObjectName("widget")
        self.gridLayout = QtWidgets.QGridLayout(self.widget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.perbtn = QtWidgets.QPushButton(self.widget)
        self.perbtn.setMinimumSize(QtCore.QSize(60, 40))
        self.perbtn.setObjectName("perbtn")
        self.gridLayout.addWidget(self.perbtn, 1, 0, 1, 1)
        self.CEbtn = QtWidgets.QPushButton(self.widget)
        self.CEbtn.setMinimumSize(QtCore.QSize(60, 40))
        self.CEbtn.setObjectName("CEbtn")
        self.gridLayout.addWidget(self.CEbtn, 1, 1, 1, 2)
        self.bsbtn = QtWidgets.QPushButton(self.widget)
        self.bsbtn.setMinimumSize(QtCore.QSize(60, 40))
        self.bsbtn.setObjectName("bsbtn")
        self.gridLayout.addWidget(self.bsbtn, 1, 5, 1, 2)
        self.recbtn = QtWidgets.QPushButton(self.widget)
        self.recbtn.setMinimumSize(QtCore.QSize(60, 40))
        self.recbtn.setObjectName("recbtn")
        self.gridLayout.addWidget(self.recbtn, 2, 0, 1, 2)
        self.squbtn = QtWidgets.QPushButton(self.widget)
        self.squbtn.setMinimumSize(QtCore.QSize(60, 40))
        self.squbtn.setObjectName("squbtn")
        self.gridLayout.addWidget(self.squbtn, 2, 2, 1, 1)
        self.addbtn = QtWidgets.QPushButton(self.widget)
        self.addbtn.setMinimumSize(QtCore.QSize(60, 40))
        self.addbtn.setObjectName("addbtn")
        self.gridLayout.addWidget(self.addbtn, 5, 5, 1, 2)
        self.onebtn = QtWidgets.QPushButton(self.widget)
        self.onebtn.setMinimumSize(QtCore.QSize(60, 40))
        self.onebtn.setObjectName("onebtn")
        self.gridLayout.addWidget(self.onebtn, 5, 0, 1, 1)
        self.sqrtbtn = QtWidgets.QPushButton(self.widget)
        self.sqrtbtn.setMinimumSize(QtCore.QSize(60, 40))
        self.sqrtbtn.setObjectName("sqrtbtn")
        self.gridLayout.addWidget(self.sqrtbtn, 2, 3, 1, 2)
        self.twobtn = QtWidgets.QPushButton(self.widget)
        self.twobtn.setMinimumSize(QtCore.QSize(60, 40))
        self.twobtn.setObjectName("twobtn")
        self.gridLayout.addWidget(self.twobtn, 5, 1, 1, 3)
        self.fivebtn = QtWidgets.QPushButton(self.widget)
        self.fivebtn.setMinimumSize(QtCore.QSize(60, 40))
        self.fivebtn.setObjectName("fivebtn")
        self.gridLayout.addWidget(self.fivebtn, 4, 2, 1, 1)
        self.ninebtn = QtWidgets.QPushButton(self.widget)
        self.ninebtn.setMinimumSize(QtCore.QSize(60, 40))
        self.ninebtn.setObjectName("ninebtn")
        self.gridLayout.addWidget(self.ninebtn, 3, 3, 1, 2)
        self.mulbtn = QtWidgets.QPushButton(self.widget)
        self.mulbtn.setMinimumSize(QtCore.QSize(60, 40))
        self.mulbtn.setObjectName("mulbtn")
        self.gridLayout.addWidget(self.mulbtn, 3, 5, 1, 2)
        self.fourbtn = QtWidgets.QPushButton(self.widget)
        self.fourbtn.setMinimumSize(QtCore.QSize(60, 40))
        self.fourbtn.setObjectName("fourbtn")
        self.gridLayout.addWidget(self.fourbtn, 4, 0, 1, 2)
        self.divbtn = QtWidgets.QPushButton(self.widget)
        self.divbtn.setMinimumSize(QtCore.QSize(60, 40))
        self.divbtn.setObjectName("divbtn")
        self.gridLayout.addWidget(self.divbtn, 2, 5, 1, 2)
        self.subtractbtn = QtWidgets.QPushButton(self.widget)
        self.subtractbtn.setMinimumSize(QtCore.QSize(60, 40))
        self.subtractbtn.setObjectName("subtractbtn")
        self.gridLayout.addWidget(self.subtractbtn, 4, 5, 1, 2)
        self.sevenbtn = QtWidgets.QPushButton(self.widget)
        self.sevenbtn.setMinimumSize(QtCore.QSize(60, 40))
        self.sevenbtn.setObjectName("sevenbtn")
        self.gridLayout.addWidget(self.sevenbtn, 3, 0, 1, 1)
        self.threebtn = QtWidgets.QPushButton(self.widget)
        self.threebtn.setMinimumSize(QtCore.QSize(60, 40))
        self.threebtn.setObjectName("threebtn")
        self.gridLayout.addWidget(self.threebtn, 5, 4, 1, 1)
        self.pmbtn = QtWidgets.QPushButton(self.widget)
        self.pmbtn.setMinimumSize(QtCore.QSize(60, 40))
        self.pmbtn.setObjectName("pmbtn")
        self.gridLayout.addWidget(self.pmbtn, 6, 0, 1, 1)
        self.dotbtn = QtWidgets.QPushButton(self.widget)
        self.dotbtn.setMinimumSize(QtCore.QSize(60, 40))
        self.dotbtn.setObjectName("dotbtn")
        self.gridLayout.addWidget(self.dotbtn, 6, 3, 1, 3)
        self.sixbtn = QtWidgets.QPushButton(self.widget)
        self.sixbtn.setMinimumSize(QtCore.QSize(60, 40))
        self.sixbtn.setObjectName("sixbtn")
        self.gridLayout.addWidget(self.sixbtn, 4, 3, 1, 2)
        self.eightbtn = QtWidgets.QPushButton(self.widget)
        self.eightbtn.setMinimumSize(QtCore.QSize(60, 40))
        self.eightbtn.setObjectName("eightbtn")
        self.gridLayout.addWidget(self.eightbtn, 3, 1, 1, 2)
        self.equalbtn = QtWidgets.QPushButton(self.widget)
        self.equalbtn.setMinimumSize(QtCore.QSize(60, 40))
        self.equalbtn.setObjectName("equalbtn")
        self.gridLayout.addWidget(self.equalbtn, 6, 6, 1, 1)
        self.zerobtn = QtWidgets.QPushButton(self.widget)
        self.zerobtn.setMinimumSize(QtCore.QSize(60, 40))
        self.zerobtn.setObjectName("zerobtn")
        self.gridLayout.addWidget(self.zerobtn, 6, 1, 1, 2)
        self.Cbtn = QtWidgets.QPushButton(self.widget)
        self.Cbtn.setMinimumSize(QtCore.QSize(60, 40))
        self.Cbtn.setObjectName("Cbtn")
        self.gridLayout.addWidget(self.Cbtn, 1, 3, 1, 2)
        self.esui = QtWidgets.QLineEdit(self.widget)
        self.esui.setMinimumSize(QtCore.QSize(300, 100))
        self.esui.setObjectName("esui")
        self.gridLayout.addWidget(self.esui, 0, 0, 1, 7)
        


        self.retranslateUi(calcul)
        QtCore.QMetaObject.connectSlotsByName(calcul)

    def retranslateUi(self, calcul):
        _translate = QtCore.QCoreApplication.translate
        calcul.setWindowTitle(_translate("calcul", "Dialog"))
        self.perbtn.setText(_translate("calcul", "%"))
        self.CEbtn.setText(_translate("calcul", "CE"))
        self.bsbtn.setText(_translate("calcul", "<--"))
        self.recbtn.setText(_translate("calcul", "1/x"))
        self.squbtn.setText(_translate("calcul", "x^2"))
        self.addbtn.setText(_translate("calcul", "+"))
        self.onebtn.setText(_translate("calcul", "1"))
        self.sqrtbtn.setText(_translate("calcul", "sqrt"))
        self.twobtn.setText(_translate("calcul", "2"))
        self.fivebtn.setText(_translate("calcul", "5"))
        self.ninebtn.setText(_translate("calcul", "9"))
        self.mulbtn.setText(_translate("calcul", "*"))
        self.fourbtn.setText(_translate("calcul", "4"))
        self.divbtn.setText(_translate("calcul", "/"))
        self.subtractbtn.setText(_translate("calcul", "-"))
        self.sevenbtn.setText(_translate("calcul", "7"))
        self.threebtn.setText(_translate("calcul", "3"))
        self.pmbtn.setText(_translate("calcul", "+/-"))
        self.dotbtn.setText(_translate("calcul", "."))
        self.sixbtn.setText(_translate("calcul", "6"))
        self.eightbtn.setText(_translate("calcul", "8"))
        self.equalbtn.setText(_translate("calcul", "="))
        self.zerobtn.setText(_translate("calcul", "0"))
        self.Cbtn.setText(_translate("calcul", "C"))
        
        self.onebtn.clicked.connect(self.c1)
        self.twobtn.clicked.connect(self.c2)
        self.threebtn.clicked.connect(self.c3)
        self.fourbtn.clicked.connect(self.c4)
        self.fivebtn.clicked.connect(self.c5)
        self.sixbtn.clicked.connect(self.c6)
        self.sevenbtn.clicked.connect(self.c7)
        self.eightbtn.clicked.connect(self.c8)
        self.ninebtn.clicked.connect(self.c9)
        self.zerobtn.clicked.connect(self.c0)
        self.dotbtn.clicked.connect(self.cdot)
        self.pmbtn.clicked.connect(self.cpm)
        self.addbtn.clicked.connect(self.cadd)
        self.subtractbtn.clicked.connect(self.csub)
        self.mulbtn.clicked.connect(self.cmul)
        self.divbtn.clicked.connect(self.cdiv)
        self.equalbtn.clicked.connect(self.ceq)
        self.recbtn.clicked.connect(self.crec)
        self.squbtn.clicked.connect(self.csqu)
        self.sqrtbtn.clicked.connect(self.csqrt)
        self.perbtn.clicked.connect(self.cper)
        self.CEbtn.clicked.connect(self.cCE)
        self.Cbtn.clicked.connect(self.cC)
        self.bsbtn.clicked.connect(self.cbs)

    global a_memory
    global b_memory
    global operation
    a_memory = ""
    b_memory = ""
    operation = ""
    
    def ceq(self):
        text = self.esui.text()
        global a_memory
        global operation
        global b_memory
        if operation == "+":
            sum = float(a_memory) + float(b_memory)
            self.esui.setText(str(sum)) 
        if operation == "-":
            sum = float(a_memory) - float(b_memory)
            self.esui.setText(str(sum)) 
        if operation == "*":
            sum = float(a_memory) * float(b_memory)
            self.esui.setText(str(sum)) 
        if operation == "/":
            sum = float(a_memory) / float(b_memory)
            self.esui.setText(str(sum))
        operation = ""
        a_memory = ""
        b_memory = text
                
            
    

    def c1(self):
        global a_memory
        text = self.esui.text()
        self.esui.setText(text + "1")
        a_memory += "1"
    
    def c2(self):
        global a_memory
        text = self.esui.text()
        self.esui.setText(text + "2")
        a_memory += "2"
    def c3(self):
        global a_memory
        text = self.esui.text()
        self.esui.setText(text + "3")
        a_memory += "3"
    def c4(self):
        global a_memory
        text = self.esui.text()
        self.esui.setText(text + "4")
        a_memory += "4"
    
    def c5(self):
        global a_memory
        text = self.esui.text()
        self.esui.setText(text + "5")
        a_memory += "5"

    def c6(self):
        global a_memory
        text = self.esui.text()
        self.esui.setText(text + "6")
        a_memory += "6"
    
    def c7(self):
        global a_memory
        text = self.esui.text()
        self.esui.setText(text + "7")
        a_memory += "7"
    
    def c8(self):
        global a_memory
        text = self.esui.text()
        self.esui.setText(text + "8")
        a_memory += "8"

    def c9(self):
        global a_memory
        text = self.esui.text()
        self.esui.setText(text + "9")
        a_memory += "9"

    def c0(self):
        global a_memory
        text = self.esui.text()
        self.esui.setText(text + "0")
        a_memory += "0"
    
    def cdot(self):
        global a_memory
        text = self.esui.text()
        self.esui.setText(text + ".")
        a_memory += "."

    
    def cpm(self):
        global operation
        text = self.esui.text()
        if operation == "":
            PorM = float(text)
            rvsd = (PorM*(-1))
            answ = str(rvsd)
            self.esui.setText(answ)
            
                
            
    def cadd(self):
        global operation
        global b_memory
        global a_memory
        operation = "+"
        text = self.esui.text()
        b_memory = text
        text += operation
        self.esui.setText(text)
        a_memory = ""
        
    
    def csub(self):
        global operation
        global b_memory
        global a_memory
        operation = "-"
        text = self.esui.text()
        b_memory = text
        text += operation
        self.esui.setText(text)
        a_memory = ""

    def cmul(self):
        global operation
        global b_memory
        global a_memory
        operation = "*"
        text = self.esui.text()
        b_memory = text
        text += operation
        self.esui.setText(text)
        a_memory = ""

    def cdiv(self):
        global operation
        global b_memory
        global a_memory
        operation = "/"
        text = self.esui.text()
        b_memory = text
        text += operation
        self.esui.setText(text)
        a_memory = ""


    def crec(self):
        global operation
        text = self.esui.text()
        if operation == "":
            recc = float(text)
            awww = np.reciprocal(recc)
            akkk = str(awww)
            self.esui.setText(akkk)
        
        b_memory = text

        
    def csqu(self):
        global operation
        text = self.esui.text()
        if operation == "":
            recc = float(text)
            awww = recc*recc
            akkk = str(awww)
            self.esui.setText(akkk)
        
        b_memory = text
          
    def csqrt(self):
        global operation
        text = self.esui.text()
        if operation == "":
            recc = float(text)
            awww = np.sqrt(recc)
            akkk = str(awww)
            self.esui.setText(akkk)
        
        b_memory = text
        
    def cper(self):
        global operation
        text = self.esui.text()
        if operation == "":
            recc = float(text)
            awww = recc*(1/100)
            akkk = str(awww)
            self.esui.setText(akkk)
        
        b_memory = text

    def cCE(self):
        global operation
        global b_memory
        global a_memory
        text = self.esui.text()
        if a_memory != "":
            a_memory = ""
            self.esui.setText(b_memory + operation)
        elif b_memory != "":
            operation = ""
            self.esui.setText(b_memory)
        else:
            b_memory = ""
            self.esui.setText("")
            
         

    def cC(self):
        self.esui.setText("")    

    def cbs(self):
        text = self.esui.text()
        print(text[:len(text)-1])
        self.esui.setText(text[:len(text)-1]) 

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    calcul = QtWidgets.QDialog()
    ui = Ui_calcul()
    ui.setupUi(calcul)
    calcul.show()
    sys.exit(app.exec_())
